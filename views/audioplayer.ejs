<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            background-color: black;
            color: white;
            height: 100vh;
            display: grid;
            place-items: center;
            font-family: Arial, sans-serif;
        }

        .container {
            display: flex;
            flex-direction: column;
            align-items: center;
            font-size: x-large;
            font-weight: 600;
            max-width: 90%;
            padding: 20px;
            text-align: center;

        }

        audio {
            margin-top: 20px;
            width: 100%;
            max-width: 600px;
        }

        .textContainer {
            margin-top: 20px;
            width: 100%;
            max-width: 1000px;
            text-align: justify;
        }


        div {
            padding-top: 5%;
        }

        span {
            opacity: 0.2;
            transition: all 0.1s ease-in-out;
        }

        .active {
            opacity: 1;
            background: linear-gradient(129deg, rgba(24, 159, 74, 1) 4%, rgba(116, 215, 133, 1) 47%, rgba(208, 235, 217, 1) 91%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            color: rgba(24, 159, 74, 1);
            /* Fallback color */
        }

        .inactive {
            opacity: 0.2;
            color: white;
        }
    </style>
</head>

<body>
    
    <div class="container">
        <audio class="player" src="http://localhost:3000/uploads/audio/<%= filename %>" controls>
        </audio>
        <div class="textContainer"></div>
    </div>

    <script>
        const players = document.querySelector('.player');
        const textContainer = document.querySelector('.textContainer');
        const subtiles_path = "<%=subtitles_path%>";

        fetch(`/uploads/subtitles/${subtiles_path}`)
            .then(response => response.json()) // Parse the response as JSON
            .then(syncData => {

                syncData.forEach((item) => {
                    //initializaion of gray text[not highlighted]
                    const spanTag = document.createElement("span")
                    spanTag.innerText = item.text
                    textContainer.appendChild(spanTag)
                })

                players.addEventListener('timeupdate', () => {
                    //Highlights text when the playes is working 

                    console.log(players.currentTime)

                    const currentTime = players.currentTime

                    syncData.forEach((item, index) => {


                        const spanTag = textContainer.children[index]

                        console.log(item.startTime);
                        if (currentTime >= item.startTime) {
                            spanTag.classList.add('active')
                        } else {
                            // Remove 'active' class if the player is reversed past this point
                            spanTag.classList.remove('active');
                        }
                    })

                })
            });
    </script>
</body>
</html>